openapi: 3.0.1
info:
  title: Opkit
  version: v1
  description: >-
    The fastest, easiest way to integrate with health insurance.<br><br>
    Opkit is a modern, easy-to-use developer toolkit for healthcare 
    payments. We provide simple APIs for verifying insurance and
    submitting health insurance claims.<br><br>To get started,
    see <a href=https://docs.opkit.co/>here</a>.
  contact:
    email: founders@opkit.co
externalDocs:
  url: https://docs.opkit.co/
  description: >-
    Read the documentation
servers:
  - url: https://api.opkit.co/v1
    description: >-
      Production
tags:
  - name: Eligibility Inquiries
  - name: Payers
  - name: Internal
paths:
  /eligibility_inquiries:
    post:
      summary: Create an eligibility inquiry
      operationId: postEligibilityInquiries
      description: >-
        <p>Create a new eligibility inquiry for this payer,
        provider, and subscriber.</p>
        <p>The response will contain information about the subscriber's
        plan, including the status and any associated benefits.
        Or, if the inquiry was rejected, it will include errors returned
        by the clearinghouse or payer.</p>
      requestBody:
        description: >-
          <p>A payload with the ID of the payer you are issuing the inquiry to,
          the NPI of the provider you are issuing the inquiry on behalf of,
          the subscriber's insurance information, and the services you are
          inquiring about.</p>
        content:
          "application/json":
            schema:
              type: object
              description: >-
                <p>An object that containing information about the subscriber you are inquiring about,
                the health insurance carrier (or "payer") you are issuing the inquiry to,
                and the provider you are issuing the inquiry on behalf of.</p>
              additionalProperties: false
              required:
                - payer_id
                - provider_npi
                - subscriber
                - services
              properties:
                payer_id:
                  type: string
                  format: uuid
                  example: 612e564c-567b-4d05-871c-1ba3a841b12d
                  description: >-
                    <p>The ID of the payer you are inssuing the inquiry to.</p>
                    <p>You can get a list of payer IDs from the getPayers endpoint.</p>
                    <p>For more on finding the appropriate payer ID,
                    see <a href="https://docs.opkit.co/docs/faq">here</a>.
                provider_npi:
                  type: string
                  description: >-
                    <p>A valid
                    <a href=https://www.cms.gov/Regulations-and-Guidance/Administrative-Simplification/NationalProvIdentStand>
                    National Provider Identifier (NPI)</a>.</p>
                    <p>This can be the NPI of an organization or an individual.</p>
                subscriber:
                  $ref: "#/components/schemas/Subscriber"
                services:
                  type: array
                  description: >-
                    <p>A list of services to return benefits for. The eligibility response
                    will only contain benefits relating to the services in this list.</p>
                    <p>If you are unsure about which service or services to specify,
                    see <a href="https://docs.opkit.co/docs/faq">here</a>.
                  items:
                    $ref: "#/components/schemas/Service"
      responses:
        "200":
          description: >-
            OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PostEligibilityInquiriesResponse"
        default:
          $ref: "#/components/responses/Default"
      tags:
        - Eligibility Inquiries
    # This should be paginated
    get:
      summary: Get all eligibility inquiries
      description: >-
        Get a list of your existing eligibility inquiries.
      operationId: getEligibilityInquiries
      responses:
        "200":
          description: >-
            OK
          content:
            "application/json":
              schema:
                type: object
                description: >-
                  An object containing a list of eligibility inquiries 
                  and a count that indicates the number of items in the list.
                additionalProperties: false
                required:
                  - count
                  - items
                properties:
                  count:
                    type: number
                    description: >-
                      The number of items in this list.
                  items:
                    type: array
                    description: >-
                      A list of eligibility inquiries.
                    items:
                      $ref: "#/components/schemas/EligibilityInquiry"
        default:
          $ref: "#/components/responses/Default"
      tags:
        - Eligibility Inquiries
  /eligibility_inquiries/{id}:
    get:
      summary: Get one eligibility inquiry
      description: >-
        Get one of your existing eligibility inquiries by ID.
      operationId: getEligibilityInquiriesId
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
            example: 612e564c-567b-4d05-871c-1ba3a841b12d
            description: >-
              The ID of the eligibility inquiry.
          required: true
          description: >-
            The ID of the eligibility inquiry.
      responses:
        "200":
          description: >-
            OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/EligibilityInquiry"
        default:
          $ref: "#/components/responses/Default"
      tags:
        - Eligibility Inquiries
  /payers:
    # This should be paginated
    get:
      summary: Get all payers
      description: >-
        <p>Get a complete list of the payers supported by Opkit.</p>
        <p>This endpoint returns a list payers that you can interact with via
        the Opkit API. Opkit supports hundreds of payers across the United States.</p>
      operationId: getPayers
      parameters:
        - in: query
          name: search
          example: anthem
          schema:
            type: string
            description: >-
              <p>A substring to match payer names on. The casing
              of this value does not matter.</p>
          required: false
          description: >-
            <p>A substring to match payer names on. The casing
            of this value does not matter.</p>
      responses:
        "200":
          description: >-
            OK
          content:
            "application/json":
              schema:
                type: object
                description: >-
                  An object containing a list of payers and a count
                  that indicates the number of items in this list.
                additionalProperties: false
                required:
                  - count
                  - items
                properties:
                  count:
                    type: number
                    description: >-
                      The number of items in this list.
                  items:
                    type: array
                    description: >-
                      A list of payers.
                    items:
                      $ref: "#/components/schemas/Payer"
        default:
          $ref: "#/components/responses/Default"
      tags:
        - Payers
  /register:
    post:
      summary: Register a user
      description: >-
        <p>Create a new customer user, customer organizaton, and API key in
        a single request.</p>
        <p>This endpoint is for Opkit internal use only and
        will return unauthorized for customer API keys. Please do not attempt
        to access it.</p>
      operationId: postRegister
      requestBody:
        description: >-
          <p>A payload containing the full name to use for the new customer user,
          the email address to use for the new customer user, and (optionally)
          the name to use for the new customer organization.</p>
          <p>If customer_organization_name
          is absent, the server will use a default value for the new customer organization
          name.</p>
        content:
          "application/json":
            schema:
              type: object
              description: >-
                <p>An object containing the full name to use for the new customer user,
                the email address to use for the new customer user, and (optionally)
                the name to use for the new customer organization.</p>
                <p>If customer_organization_name
                is absent, the server will use a default value for the new customer organization
                name.</p>
              additionalProperties: false
              required:
                - customer_user_name
                - customer_user_email
              properties:
                customer_user_name:
                  type: string
                  description: >-
                    The full name to use for the new customer user.
                customer_user_email:
                  type: string
                  format: email
                  description: >-
                    The email address to use for the new customer user.
                customer_organization_name:
                  type: string
                  description: >-
                    <p>The name to use for the new customer organization. If this field is
                    not provided, the server will use a default value for the customer
                    organization name.</p>
      responses:
        "200":
          description: >-
            OK
          content:
            "application/json":
              schema:
                type: object
                description: >-
                  <p>An object containing various fields from the new customer user,
                  customer organization, and API key.</p>
                  <p>This object will contain the secret
                  value of the API key, which should NEVER be shared publicly.</p>
                additionalProperties: false
                required:
                  - customer_user_id
                  - customer_user_name
                  - customer_user_email
                  - customer_organization_id
                  - customer_organization_name
                  - api_key_id
                  - api_key_name
                  - api_key_value
                properties:
                  customer_user_id:
                    type: string
                    format: uuid
                    example: 612e564c-567b-4d05-871c-1ba3a841b12d
                    description: >-
                      The ID of the new customer user.
                  customer_user_name:
                    type: string
                    description: >-
                      The name of the new customer user.
                  customer_user_email:
                    type: string
                    description: >-
                      The email of the new customer user.
                  customer_organization_id:
                    type: string
                    format: uuid
                    example: 612e564c-567b-4d05-871c-1ba3a841b12d
                    description: >-
                      The ID of the new customer organization.
                  customer_organization_name:
                    type: string
                    format: uuid
                    example: 612e564c-567b-4d05-871c-1ba3a841b12d
                    description: >-
                      The name of the new customer organization.
                  api_key_id:
                    type: string
                    format: uuid
                    example: 612e564c-567b-4d05-871c-1ba3a841b12d
                    description: >-
                      The ID of the new API key.
                  api_key_name:
                    type: string
                    format: uuid
                    example: 612e564c-567b-4d05-871c-1ba3a841b12d
                    description: >-
                      The name of the new API key.
                  api_key_value:
                    type: string
                    format: uuid
                    example: 612e564c-567b-4d05-871c-1ba3a841b12d
                    description: >-
                      The value of the new API key. This value is secret and
                      should never be shared publicly!
        default:
          $ref: "#/components/responses/Default"
      tags:
        - Internal
components:
  schemas:
    Service:
      type: string
      description: >-
        <p>An enum that describes medical goods and services.</p>
        <p>You must supply one or more services when performing
        an eligibility inquiry. The services you choose determine
        the benefits that are included in the response.</p>
        <p>"health_benefit_plan_coverage" is a generic service
        that covers general benefits, such as a plan's overall
        deductible. This is a convention of the health insurance
        industry.</p>
      enum:
        - medical_care
        - surgical
        - consultation
        - diagnostic_x_ray
        - diagnostic_lab
        - radiation_therapy
        - anesthesia
        - surgical_assistance
        - other_medical
        - non_escrow_or_non_impound_service
        - escrow_or_impound_service
        - blood_charges
        - used_durable_medical_equipment
        - durable_medical_equipment_purchase
        - ambulatory_service_center_facility
        - renal_supplies_in_the_home
        - alternate_method_dialysis
        - chronic_renal_disease_crd_equipment
        - pre_admission_testing
        - durable_medical_equipment_rental
        - pneumonia_vaccine
        - second_surgical_opinion
        - third_surgical_opinion
        - social_work
        - diagnostic_dental
        - periodontics
        - restorative
        - endodontics
        - maxillofacial_prosthetics
        - adjunctive_dental_services
        - health_benefit_plan_coverage
        - benefit_disclaimer
        - plan_waiting_period
        - chiropractic
        - chiropractic_office_visits
        - dental_care
        - dental_crowns
        - dental_accident
        - orthodontics
        - prosthodontics
        - oral_surgery
        - routine_preventive_dental
        - home_health_care
        - home_health_prescriptions
        - home_health_visits
        - hospice
        - respite_care
        - hospital
        - hospital_inpatient
        - hospital_room_and_board
        - hospital_outpatient
        - hospital_emergency_accident
        - hospital_emergency_medical
        - hospital_ambulatory_surgical
        - long_term_care
        - major_medical
        - medically_related_transportation
        - air_transportation
        - cabulance
        - licensed_ambulance
        - general_benefits
        - in_vitro_fertilization
        - mri_cat_scan
        - donor_procedures
        - acupuncture
        - newborn_care
        - pathology
        - smoking_cessation
        - well_baby_care
        - maternity
        - transplants
        - audiology_exam
        - inhalation_therapy
        - diagnostic_medical
        - private_duty_nursing
        - prosthetic_device
        - dialysis
        - otological_exam
        - chemotherapy
        - allergy_testing
        - immunizations
        - routine_physical
        - family_planning
        - infertility
        - abortion
        - aids
        - emergency_services
        - cancer
        - pharmacy
        - free_standing_prescription_drug
        - mail_order_prescription_drug
        - brand_name_prescription_drug
        - generic_prescription_drug
        - podiatry
        - podiatry_office_visits
        - podiatry_nursing_home_visits
        - professional_physician
        - anesthesiologist
        - professional_physician_visit_office
        - professional_physician_visit_inpatient
        - professional_physician_visit_outpatient
        - professional_physician_visit_nursing_home
        - professional_physician_visit_skilled_nursing_facility
        - professional_physician_visit_home
        - psychiatric
        - psychiatric_room_and_board
        - psychotherapy
        - psychiatric_inpatient
        - psychiatric_outpatient
        - rehabilitation
        - rehabilitation_room_and_board
        - rehabilitation_inpatient
        - rehabilitation_outpatient
        - occupational_therapy
        - physical_medicine
        - speech_therapy
        - skilled_nursing_care
        - skilled_nursing_care_room_and_board
        - substance_abuse
        - alcoholism
        - drug_addiction
        - vision_optometry
        - frames
        - routine_exam
        - lenses
        - nonmedically_necessary_physical
        - experimental_drug_therapy
        - burn_care
        - brand_name_prescription_drug_formulary
        - brand_name_prescription_drug_non_formulary
        - independent_medical_evaluation
        - partial_hospitalization_psychiatric
        - day_care_psychiatric
        - cognitive_therapy
        - massage_therapy
        - pulmonary_rehabilitation
        - cardiac_rehabilitation
        - pediatric
        - nursery
        - skin
        - orthopedic
        - cardiac
        - lymphatic
        - gastrointestinal
        - endocrine
        - neurology
        - eye
        - invasive_procedures
        - gynecological
        - obstetrical
        - obstetrical_gynecological
        - mail_order_prescription_drug_brand_name
        - mail_order_prescription_drug_generic
        - physician_visit_office_sick
        - physician_visit_office_well
        - coronary_care
        - private_duty_nursing_inpatient
        - private_duty_nursing_home
        - surgical_benefits_professional_physician
        - surgical_benefits_facility
        - mental_health_provider_inpatient
        - mental_health_provider_outpatient
        - mental_health_facility_inpatient
        - mental_health_facility_outpatient
        - substance_abuse_facility_inpatient
        - substance_abuse_facility_outpatient
        - screening_x_ray
        - screening_laboratory
        - mammogram_high_risk_patient
        - mammogram_low_risk_patient
        - flu_vaccination
        - eyewear_and_eyewear_accessories
        - case_management
        - dermatology
        - durable_medical_equipment
        - diabetic_supplies
        - generic_prescription_drug_formulary
        - generic_prescription_drug_non_formulary
        - allergy
        - intensive_care
        - mental_health
        - neonatal_intensive_care
        - oncology
        - physical_therapy
        - pulmonary
        - renal
        - residential_psychiatric_treatment
        - transitional_care
        - transitional_nursery_care
        - urgent_care
    Plan:
      type: object
      additionalProperties: false
      description: >-
        <p>An object representing a health insurance plan offered by a payer.</p>
        <p>A plan has features called "benefits". These include deductibles,
        coinsurance, copayments, out-of-pocket maximums, limitations, and more.</p>
      required:
        - benefits
      properties:
        benefits:
          type: array
          description: >-
            <p>A list of benefits that are included in this plan.
            A benefit is a feature of a plan.</p>
            <p>THIS LIST IS NOT COMPREHENSIVE. The benefits that appear
            in this list are determined by the services specified in the
            request payload.</p>
            <p>There are some benefits that do not relate to a specific medical
            service. For example, the plan's overall deductible. These "general
            benefits" will appear under the "health_benefit_plan_coverage"
            service. This is a convention in the health insurance industry.</p>
          items:
            $ref: "#/components/schemas/Benefit"
    BenefitType:
      type: string
      description: >-
        <p>An enum that indicates benefit type.</p>
      enum:
        - active_coverage
        - inactive
        - deductible
        - out_of_pocket_stop_loss
        - copayment
        - coinsurance
        - limitations
    EligibilityInquiryError:
      type: object
      additionalProperties: false
      description: >-
        <p>An object representing an eligibility inquiry error.</p>
        <p>An eligibility inquiry error is an error that is returned
        by either the clearinghouse or payer. This is is distinct from
        HTTP 4XX and 5XX errors, which are returned by Opkit's servers.</p>
        <p>Usually, an eligibility inquiry error occurs when there
        was a problem with the subscriber's insurance information. For
        example, a payer may return an error if the subscriber's member
        ID was not recognized.</p>
      required:
        - message
      properties:
        message:
          type: string
          description: >-
            TODO
    BenefitCoverage:
      type: string
      description: >-
        <p>An enum that describes a benefit's level of coverage.</p>
      enum:
        - children_only
        - dependents_only
        - employee_and_one_dependent
        - employee_and_two_dependents
        - employee_and_three_dependents
        - employee_and_one_or_more_dependents
        - employee_and_two_or_more_dependents
        - employee_and_three_or_more_dependents
        - employee_and_four_or_more_dependents
        - employee_and_five_or_more_dependents
        - employee_and_children
        - employee_only
        - employee_and_spouse
        - family
        - individual
        - subscriber_and_1_child
        - subscriber_and_1_or_more_children
        - subscriber_and_2_or_more_children
        - spouse_and_children
        - spouse_only
        - subscriber_spouse_and_1_child
        - subscriber_spouse_and_1_or_more_children
        - subscriber_spouse_and_2_or_more_children
        - subscriber_and_spouse
        - two_party
    BenefitPeriod:
      type: string
      description: >-
        <p>An enum that describes benefit time period.</p>
      enum:
        - chargeable_periods
        - periods_held
        - free_periods
        - saturdays_sundays_and_holidays
        - other_allowance_periods
        - hour
        - day
        - not_applicable
        - initial_visit
        - mutually_defined
        - six_hours
        - 12_hours
        - 18_hours
        - 24_hours
        - debit_days
        - credit_days
        - excess_days
        - hazardous_days
        - holidays
        - saturdays_and_sundays
        - sundays_and_holidays
        - years
        - service_year
        - calendar_year
        - year_to_date
        - contract
        - episode
        - visit
        - outlier
        - remaining
        - exceeded
        - not_exceeded
        - lifetime
        - lifetime_remaining
        - month
        - week
        - admission
        - three_months
    Benefit:
      type: object
      additionalProperties: false
      description: >-
        <p>An object that represents a discrete benefit.</p>
        <p>A benefit is a feature of the subscriber's
        insurance plan. For example, the plan may include a $100 co-pay for in-network physician
        office visits.</p>
        <p>The benefit object is polymorphic and may contain different fields depending
        on the service, type, coverage_level, and other factors.</p>
        <p>You can determine whether a
        subscriber is eligible to receive a certain medical service under their insurance plan
        by reviewing the list of benefits that are included in the eligibility inquiry response body.</p>
      required:
        - type
        - service
        - values
        - name
        - messages
      properties:
        name:
          type: string
          description: >-
            <p>A semi-unique name that describes this particular benefit.</p>
            <p>This value is derived from other characteristics of the benefit,
            specifically the benefit's type, network, coverage, and period.</p>
            <p>Note that names are not unique across services. Two benefits
            with different services may share the same name.</p>
        type:
          $ref: "#/components/schemas/BenefitType"
        service:
          $ref: "#/components/schemas/Service"
        network:
          $ref: "#/components/schemas/BenefitNetwork"
        coverage:
          $ref: "#/components/schemas/BenefitCoverage"
        period:
          $ref: "#/components/schemas/BenefitPeriod"
        values:
          type: array
          description: >-
            TODO
          items:
            $ref: "#/components/schemas/BenefitValue"
        messages:
          type: array
          description: >-
            TODO
          items:
            type: string
    BenefitValue:
      type: object
      additionalProperties: false
      description: >-
        <p>A value associated with a benefit.</p>
      required:
        - type
        - value
      properties:
        type:
          type: string
          description: >-
            TODO
          enum:
            - currency
            - percent
            - status
            - quantity
        value:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/StatusValue"
        qualifier:
          $ref: "#/components/schemas/Qualifier"
    Qualifier:
      type: string
      description: >-
        TODO
      enum:
        - original_transaction
        - must_respond_by
        - pickup_appointment_scheduled_time
        - delivery_appointment_scheduled_time
        - pickup_requested_scheduled_time
        - delivery_requested_scheduled_time
        - pickup_appointment_granted_time
        - delivery_appointment_granted_time
        - actual_pickup_time
        - actual_delivery_time
        - actual_departure_time
        - released
        - constructive_placement
        - estimated_departure_time
        - estimated_arrival_time
        - actual_unloading_completed
        - earliest_requested_deliver_time
        - customs_release
        - earliest_requested_pickup_time
        - duty_paid
        - latest_requested_pickup_time
        - latest_requested_delivery_time
        - charged_from
        - notified
        - charged_to
        - actual_placement
        - ordered
        - actual_arrival_time
        - scheduled_departure_time
        - scheduled_arrival_time
        - scheduled_pickup_time
        - actual_unloading_started
        - effective_time
        - scheduled_delivery_time
        - requested_pickup_time
        - requested_delivery_time
        - beginning_of_customer_plant_shutdown
        - ending_of_customer_plant_shutdown
        - earliest_delivery_time
        - earliest_pickup_time
        - latest_delivery_time
        - latest_pickup_time
        - ready_to_ship
    StatusValue:
      type: string
      description: >-
        TODO
      enum:
        - active
        - inactive
    EligibilityInquiry:
      type: object
      additionalProperties: false
      description: >-
        <p>A request for information from a payer about a health insurance policy's
        coverages, typically in relation to a particular subscriber.</p>
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: 612e564c-567b-4d05-871c-1ba3a841b12d
          description: >-
            A unique identifier.
    PostEligibilityInquiriesResponse:
      type: object
      additionalProperties: false
      description: >-
        <p>The response to a postEligibilityInquiries request.</p>
        <p>This object contains the results of the eligibility inquiry,
        including the subscriber's plan and any benefits. Or, if the inquiry
        was rejected, it will include errors returned by the clearinghouse
        or payer.</p>
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: 612e564c-567b-4d05-871c-1ba3a841b12d
          description: >-
            A unique identifier.
        plan:
          $ref: "#/components/schemas/Plan"
        errors:
          type: array
          description: >-
            <p>A list of eligibility inquiry errors.</p>
            <p>An eligibility inquiry error is an error that is returned
            by either the clearinghouse or payer. This list may contain
            error items if the eligibility inquiry was created successfully
            but rejected by either the clearinghouse or payer.</p>
          items:
            $ref: "#/components/schemas/EligibilityInquiryError"
    Payer:
      type: object
      additionalProperties: false
      description: >-
        A health insurance carrier that offers one or more health insurance plans.
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          example: 612e564c-567b-4d05-871c-1ba3a841b12d
          description: >-
            A unique identifier.
        name:
          type: string
          description: >-
            The name of the payer.
    Subscriber:
      type: object
      additionalProperties: false
      description: >-
        <p>An individual who is covered under a health insurance plan.
        This is a subscriber, not a dependent.</p>
        <p>Opkit does not currently support eligibility inquiries for dependents.
        If you have this use-case, please let us
        know by contacting <a href=mailto:founders@opkit.co>founders@opkit.co</a>.</p>
      required:
        - first_name
        - last_name
        - member_id
        - date_of_birth
      properties:
        first_name:
          type: string
          description: >-
            The subscriber's first name as it appears on their insurance card.
        last_name:
          type: string
          description: >-
            The subscriber's last name as it appears on their insurance card.
        member_id:
          type: string
          description: >-
            The subscriber's member ID as it appears on their insurance card.
        date_of_birth:
          type: string
          format: date
          example: 01-01-2021
          description: >-
            <p>The subscriber's date of birth as it appears on their insurance card.</p>
            <p>This should be formatted like 01-01-2021.</p>
    BenefitNetwork:
      type: string
      description: >-
        <p>An enum that describes a benefit's network status.</p>
      enum:
        - in_network
        - out_of_network
    ErrorCode:
      type: string
      description: >-
        <p>An error code indicating the category of problem.</p>
      enum:
        - unauthorized
        - bad_request
        - not_found
    Error:
      type: object
      additionalProperties: false
      description: >-
        <p>An object that is returned when an error has occured.
        This includes both client- and server-side errors.</p>
      required:
        - code
        - message
      properties:
        code:
          $ref: "#/components/schemas/ErrorCode"
        message:
          type: string
          description: >-
            <p>A brief text description that expands upon this particular error code.</p>
  responses:
    Default:
      description: >-
        <p>A default error response if no other response is provided.</p>
        <p>If you see this response, it should be accompanied by a 4XX HTTP status code.
        You can use the error code to programmatically handle the error.</p>
        <p>5XX responses are unanticipated will not include an error object
        in the response body. You should try resubmitting the request.</p>
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/Error"
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: >-
        <p>Opkit authenticates requests using
        <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication">HTTP Basic Auth</a>.</p>
        <p>Basic Auth usually involves two values: a username and password.
        In Opkit's case, you should provide your API key as the username.
        You do not need to provide a password.</p>
        <p>Therefore, your requests should include the following header:
        "Authorization: Basic &lt;base64-encode(your-api-key-with-a-trailing-colon)&gt;".</p>
        <p>For more information, see <a href="https://docs.opkit.co/docs/authorization">here</a>.</p>
security:
  - BasicAuth: []
